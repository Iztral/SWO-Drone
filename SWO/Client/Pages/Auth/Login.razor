@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>@ViewResources.Login</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <RadzenCard>
            <RadzenLogin AllowRegister="false" AllowResetPassword="false" 
                         LoginText="@ViewResources.Login" UserText="@ModelResources.Login" PasswordText="@ModelResources.Password"  
                         PasswordRequired="@ViewResources.Required" UserRequired="@ViewResources.ValidEmail"
                         Login="@((args) => HandleLogin(args))" 
                         Style="margin-bottom: 20px;" />
        </RadzenCard>
    </div>
</div>

@code {

    private LoginModel loginModel { get; set; }
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin(LoginArgs args)
    {
        ShowErrors = false;

        loginModel = new LoginModel
        {
            Email = args.Username,
            Password = args.Password,
            RememberMe = false
        };

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}